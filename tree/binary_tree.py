from typing import TypeVar, Generic, Generator, Optional

# use generics to construct node
T = TypeVar("T")


class TreeNode(Generic[T]):
    def __init__(self, value):
        # type: (T) -> None
        self.val = value
        self.left = None
        self.right = None


########################################
# use generator to implement recursion #
########################################

# Pre-order traversal
def pre_order(root):
    # type: (Optional[TreeNode[T]]) -> Generator[T, None, None]
    if root:
        yield root.val
        # In Python3, we can use nested generator like this:
        # yield from pre_order(root.left)
        # yield from pre_order(root.right)

        # In Python2, we should manual iterate
        for node in pre_order(root.left):
            yield node  # node already has been object generated by generator
        for node in pre_order(root.right):
            yield node
    else:
        return


# In-order traversal
def in_order(root):
    # type: (Optional[TreeNode[T]]) -> Generator[T, None, None]
    if root:
        for node in in_order(root.left):
            yield node
        yield root.val
        for node in in_order(root.right):
            yield node
    else:
        return


# In-order traversal
def post_order(root):
    # type: (Optional[TreeNode[T]]) -> Generator[T, None, None]
    if root:
        for node in post_order(root.left):
            yield node
        for node in post_order(root.right):
            yield node
        yield root.val
    else:
        return


if __name__ == '__main__':
    singer = TreeNode("Taylor Swift")

    genre_country = TreeNode("Country")
    genre_pop = TreeNode("Pop")

    album_fearless = TreeNode("Fearless")
    album_red = TreeNode("Red")
    album_1989 = TreeNode("1989")
    album_reputation = TreeNode("Reputation")

    song_ls = TreeNode("Love Story")
    song_wh = TreeNode("White Horse")
    song_wanegbt = TreeNode("We Are Never Ever Getting Back Together")
    song_ikywt = TreeNode("I Knew You Were Trouble")
    song_sio = TreeNode("Shake It Off")
    song_bb = TreeNode("Bad Blood")
    song_lwymmd = TreeNode("Look What You Made Me Do")
    song_g = TreeNode("Gorgeous")

    singer.left, singer.right = genre_country, genre_pop
    genre_country.left, genre_country.right = album_fearless, album_red
    genre_pop.left, genre_pop.right = album_1989, album_reputation
    album_fearless.left, album_fearless.right = song_ls, song_wh
    album_red.left, album_red.right = song_wanegbt, song_ikywt
    album_1989.left, album_1989.right = song_sio, song_bb
    album_reputation.left, album_reputation.right = song_lwymmd, song_g

    print(list(pre_order(singer)))
    print(list(in_order(singer)))
    print(list(post_order(singer)))
